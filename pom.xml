<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>de.nielsfalk</groupId>
    <artifactId>youcast</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>podcast-feed</name>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.8.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.axet</groupId>
            <artifactId>vget</artifactId>
            <version>1.1.22</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit-dep</artifactId>
            <version>4.11</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>podcast-feed</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <inherited>true</inherited>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <contextPath>/</contextPath>
                    <webApp>
                        <contextPath>/</contextPath>
                        <webInfIncludeJarPattern>.*/.*jersey-[^/]\.jar$</webInfIncludeJarPattern>
                    </webApp>
                    <war>${project.build.directory}/${project.build.finalName}.war</war>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <properties>
        <jersey.version>2.13</jersey.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jetty.version>9.0.6.v20130930</jetty.version>
    </properties>

    <profiles>
        <profile>
            <id>spockTesting</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
            </properties>
            <build>
                <!-- Mandatory plugins for using Spock -->
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <version>1.4</version>
                        <configuration>
                            <providerSelection>2.0</providerSelection>
                            <source/>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.gmaven.runtime</groupId>
                                <artifactId>gmaven-runtime-2.0</artifactId>
                                <version>1.4</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>2.1.5</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <!-- Optional plugins for using Spock -->
                    <!-- Only required if default Surefire configuration is not satisfactory -->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <useFile>false</useFile>
                            <includes>
                                <include>**/*Spec.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <!-- Mandatory dependencies for using Spock -->
                <dependency>
                    <groupId>org.spockframework</groupId>
                    <artifactId>spock-core</artifactId>
                    <version>1.0-groovy-2.0-SNAPSHOT</version>
                    <scope>test</scope>
                </dependency>
                <!-- Optional dependencies for using Spock -->
                <dependency> <!-- enables mocking of classes (in addition to interfaces) -->
                    <groupId>cglib</groupId>
                    <artifactId>cglib-nodep</artifactId>
                    <version>2.2.2</version>
                    <scope>test</scope>
                </dependency>
                <dependency> <!-- enables mocking of classes without default constructor (together with CGLIB) -->
                    <groupId>org.objenesis</groupId>
                    <artifactId>objenesis</artifactId>
                    <version>1.2</version>
                    <scope>test</scope>
                </dependency>
                <dependency> <!-- only necessary if Hamcrest matchers are used -->
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                    <version>1.3</version>
                    <scope>test</scope>
                </dependency>

            </dependencies>
            <repositories>
                <!-- Only required if a snapshot version of Spock is used -->
                <repository>
                    <id>spock-snapshots</id>
                    <url>http://oss.sonatype.org/content/repositories/snapshots/</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
            </repositories>

            <!-- Only required if a snapshot version of Spock's Maven plugin is used -->
            <pluginRepositories>
                <pluginRepository>
                    <id>spock-snapshots</id>
                    <url>http://oss.sonatype.org/content/repositories/snapshots/</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>

            <!-- Only required for spock-example build -->
            <distributionManagement>
                <repository>
                    <id>foo</id>
                    <url>file:///fake.repository.to.make.maven.happy</url>
                </repository>
                <snapshotRepository>
                    <id>bar</id>
                    <url>file:///fake.repository.to.make.maven.happy</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>
</project>
